I used 2456786547 and 1 to fail midpoint_original test. It failed because 2456786547 is 0b 10010010011011111001011001110011 and 1 is 0b 00000000000000000000000000000001 so the midpoint of 2456786547 and 1 is expected to be 0b 10010010011011111001011001110100. However, midpoint_original failed when it computes [x + y] because its result is [0b 10010010011011111001011001110011 + 0b 1 / 2 = 0b 11001001001101111100101100111010 ].   

I used -256 and -1 to fail midpoint_A test. It failed because -256 is 0b 11001001001101111100101100111010  and -1 is 0b 11111111111111111111111111111111 so the midpoint of -256 and -1 is expected to be 0b 010010010011011111001011001110100. However, midpoint_original failed when it computes [x + y] because its result is [0b 010010010011011111001011001110011 + 0b 11111111111111111111111111111111   = 0b 11111111111111111111111101111111 ].   


